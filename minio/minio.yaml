apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
    name: "9000"
    nodePort:
  selector:
    app: minio
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: minio
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: s-hdp-vre-v007.charite.de/minio:RELEASE.2021-04-22T15-44-28Z
        command: ["minio"]
        args: ["server", "/data{1...4}"]
        env:
        - name: MINIO_ACCESS_KEY
          value: "$KEY"
        - name: MINIO_SECRET_KEY
          value: "$KEY"
        - name: MINIO_NOTIFY_AMQP_ENABLE
          value: "on"
        - name: MINIO_NOTIFY_AMQP_URL
          value: "amqp://greenroom:rabbitmq-jrjmfa9svvC@message-bus-greenroom.greenroom:5672"
        - name: MINIO_NOTIFY_AMQP_EXCHANGE
          value: "direct_logs"
        - name: MINIO_NOTIFY_AMQP_EXCHANGE_TYPE
          value: "direct"
        - name: MINIO_NOTIFY_AMQP_ROUTING_KEY
          value: "indoc"
        - name: MINIO_KMS_KES_ENDPOINT
          value: "https://kes.minio:7373"
        - name: MINIO_KMS_KES_KEY_FILE
          value: "/var/lib/docker/minio.key"
        - name: MINIO_KMS_KES_CERT_FILE
          value: "/var/lib/docker/minio.cert"
        - name: MINIO_KMS_KES_CA_PATH
          value: "/var/lib/docker/server.cert"
        - name: MINIO_KMS_KES_KEY_NAME
          value: "my-minio-key"
        - name: MINIO_IDENTITY_OPENID_CONFIG_URL
          value: "http://keycloak.utility:8080/vre/auth/realms/vre/.well-known/openid-configuration"
        - name: MINIO_IDENTITY_OPENID_CLIENT_ID
          value: "minio"
        - name: MINIO_IDENTITY_OPENID_CLAIM_NAME
          value: "policy"
        - name: MINIO_IDENTITY_OPENID_SCOPES
          value: "email,openid,profile,roles,web-origins"
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /data1
          name: minio-data-1
        - mountPath: /data2
          name: minio-data-2
        - mountPath: /data3
          name: minio-data-3
        - mountPath: /data4
          name: minio-data-4
        - mountPath: /var/lib/docker/minio.cert
          subPath: minio.cert
          name: minio-cert
        - mountPath: /var/lib/docker/minio.key
          subPath: minio.key
          name: minio-key
        - mountPath: /var/lib/docker/server.cert
          subPath: server.cert
          name: server-cert
      terminationGracePeriodSeconds: 60
      nodeSelector:
        namespace: minio
      volumes:
      - name: minio-cert
        configMap:
          name: minio.cert
          items:
          - key: minio.cert
            path: minio.cert
      - name: minio-key
        configMap:
          name: minio.key
          items:
          - key: minio.key
            path: minio.key
      - name: server-cert
        configMap:
          name: server.cert.kes
          items:
          - key: server.cert
            path: server.cert
  volumeClaimTemplates:
  - metadata:
      name: minio-data-1
      annotations:
        volume.beta.kubernetes.io/storage-class: new-managed-nfs-storage-minio
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 5T
  - metadata:
      name: minio-data-2
      annotations:
        volume.beta.kubernetes.io/storage-class: new-managed-nfs-storage-minio
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 5T
  - metadata:
      name: minio-data-3
      annotations:
        volume.beta.kubernetes.io/storage-class: new-managed-nfs-storage-minio
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 5T
  - metadata:
      name: minio-data-4
      annotations:
        volume.beta.kubernetes.io/storage-class: new-managed-nfs-storage-minio
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 5T
