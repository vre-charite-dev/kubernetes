apiVersion: v1
data:
  init_db.sql: "\n   --- Keycloak DB , user creation\n    CREATE extension IF NOT
    EXISTS dblink;\n\n   \nCREATE OR REPLACE FUNCTION pg_temp.f_create_db(db text)\n
    \     RETURNS void AS\n    $func$\n    DECLARE\n       _db text := db;\n    BEGIN\n
    \    \n      IF EXISTS (SELECT 1 FROM pg_database WHERE datname = _db) THEN\n
    \        RAISE NOTICE 'Database already exists';\n       ELSE\n \n          PERFORM
    dblink_exec('dbname=' || current_database(), 'CREATE DATABASE ' || _db);\n       END
    IF;\n\n    END\n    $func$ LANGUAGE plpgsql;\n\nSELECT pg_temp.f_create_db(:'KEYCLOAK_DB');\t\nSELECT
    pg_temp.f_create_db(:'INDOC_DB');\t\t\n\nCREATE OR REPLACE FUNCTION pg_temp.f_try_create_user(u
    text, pass text)\n\t RETURNS void AS\n   $func$\n   DECLARE\n     _user text :=
    u;\n\t _pass text := pass;\n   BEGIN\n      IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles
    WHERE rolname = _user) THEN\n          --CREATE USER _user WITH PASSWORD '_pass';\n
    \         EXECUTE format('CREATE USER %I WITH PASSWORD %L', _user, _pass);\n      END
    IF;\n   END\n   $func$ LANGUAGE plpgsql;\n\nSELECT pg_temp.f_try_create_user(:'KEYCLOAK_USER',:'KEYCLOAK_PASSWORD');\nSELECT
    pg_temp.f_try_create_user(:'INDOC_USER',:'INDOC_PASSWORD');\n   \n    \nGRANT
    ALL PRIVILEGES ON DATABASE :KEYCLOAK_DB TO :KEYCLOAK_USER;\nGRANT ALL ON SCHEMA
    public TO :KEYCLOAK_USER;\n   \nGRANT ALL PRIVILEGES ON DATABASE :INDOC_DB TO
    :INDOC_USER;\nGRANT ALL ON SCHEMA public TO :INDOC_USER;\n    \n\n--\n-- PostgreSQL
    database dump\n--\n\n-- Dumped from database version 9.5.23\n-- Dumped by pg_dump
    version 9.5.23\n\n\\c :INDOC_DB\n\nSET statement_timeout = 0;\nSET lock_timeout
    = 0;\nSET client_encoding = 'UTF8';\nSET standard_conforming_strings = on;\nSELECT
    pg_catalog.set_config('search_path', '', false);\nSET check_function_bodies =
    false;\nSET xmloption = content;\nSET client_min_messages = warning;\nSET row_security
    = off;\n\n--\n-- Name: indoc_vre; Type: SCHEMA; Schema: -; Owner: indoc_vre\n--\n\nCREATE
    SCHEMA IF NOT EXISTS indoc_vre ;\n\n\n\n\nALTER SCHEMA indoc_vre OWNER TO indoc_vre;\n\n--\n--
    Name: plpgsql; Type: EXTENSION; Schema: -; Owner: \n--\n\nCREATE EXTENSION IF
    NOT EXISTS plpgsql WITH SCHEMA pg_catalog;\n\n\n--\n-- Name: EXTENSION plpgsql;
    Type: COMMENT; Schema: -; Owner: \n--\n\nCOMMENT ON EXTENSION plpgsql IS 'PL/pgSQL
    procedural language';\n\n\n--\n-- Name: typeenum; Type: TYPE; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\n\n-- https://stackoverflow.com/questions/7624919/check-if-a-user-defined-type-already-exists-in-postgresql\n\nDO
    $$ BEGIN\n    CREATE TYPE indoc_vre.typeenum AS ENUM \n    (\n        'text',\n
    \       'multiple_choice'\n    );\nEXCEPTION\n    WHEN duplicate_object THEN null;\nEND
    $$;\n\n\nALTER TYPE indoc_vre.typeenum OWNER TO indoc_vre;\n\nSET default_tablespace
    = '';\n\nSET default_with_oids = false;\n\n--\n-- Name: announcement; Type: TABLE;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.announcement
    (\n    id integer NOT NULL,\n    project_code character varying,\n    content
    character varying,\n    version character varying,\n    publisher character varying,\n
    \   date timestamp without time zone\n);\n\n\nALTER TABLE indoc_vre.announcement
    OWNER TO indoc_vre;\n\n--\n-- Name: announcement_id_seq; Type: SEQUENCE; Schema:
    indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF NOT EXISTS  indoc_vre.announcement_id_seq\n
    \   START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE
    1;\n\n\nALTER TABLE indoc_vre.announcement_id_seq OWNER TO indoc_vre;\n\n--\n--
    Name: announcement_id_seq; Type: SEQUENCE OWNED BY; Schema: indoc_vre; Owner:
    indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.announcement_id_seq OWNED BY indoc_vre.announcement.id;\n\n\n--\n--
    Name: approval_entity; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS  indoc_vre.approval_entity (\n    id uuid NOT NULL,\n    request_id
    uuid,\n    entity_geid character varying,\n    entity_type character varying,\n
    \   review_status character varying,\n    reviewed_by character varying,\n    reviewed_at
    character varying,\n    parent_geid character varying,\n    copy_status character
    varying,\n    name character varying,\n    uploaded_by character varying,\n    dcm_id
    character varying,\n    uploaded_at timestamp without time zone,\n    file_size
    bigint\n);\n\n\nALTER TABLE indoc_vre.approval_entity OWNER TO indoc_vre;\n\n--\n--
    Name: approval_request; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS indoc_vre.approval_request (\n    id uuid NOT NULL,\n    status
    character varying,\n    submitted_by character varying,\n    submitted_at timestamp
    without time zone,\n    destination_geid character varying,\n    source_geid character
    varying,\n    note character varying,\n    project_geid character varying,\n    destination_path
    character varying,\n    source_path character varying,\n    review_notes character
    varying,\n    completed_by character varying,\n    completed_at timestamp without
    time zone\n);\n\n\nALTER TABLE indoc_vre.approval_request OWNER TO indoc_vre;\n\n--\n--
    Name: archive_preview; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS indoc_vre.archive_preview (\n    id integer NOT NULL,\n    file_geid
    character varying,\n    archive_preview character varying\n);\n\n\nALTER TABLE
    indoc_vre.archive_preview OWNER TO indoc_vre;\n\n--\n-- Name: archive_preview_id_seq;
    Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF
    NOT EXISTS indoc_vre.archive_preview_id_seq\n    START WITH 1\n    INCREMENT BY
    1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.archive_preview_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: archive_preview_id_seq; Type: SEQUENCE OWNED
    BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.archive_preview_id_seq
    OWNED BY indoc_vre.archive_preview.id;\n\n\n--\n-- Name: bids_results; Type: TABLE;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.bids_results
    (\n    id integer NOT NULL,\n    dataset_geid character varying(50) NOT NULL,\n
    \   created_time timestamp without time zone NOT NULL,\n    updated_time timestamp
    without time zone NOT NULL,\n    validate_output json\n);\n\n\nALTER TABLE indoc_vre.bids_results
    OWNER TO indoc_vre;\n\n--\n-- Name: bids_results_id_seq; Type: SEQUENCE; Schema:
    indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF NOT EXISTS  indoc_vre.bids_results_id_seq\n
    \   START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE
    1;\n\n\nALTER TABLE indoc_vre.bids_results_id_seq OWNER TO indoc_vre;\n\n--\n--
    Name: bids_results_id_seq; Type: SEQUENCE OWNED BY; Schema: indoc_vre; Owner:
    indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.bids_results_id_seq OWNED BY indoc_vre.bids_results.id;\n\n\n--\n--
    Name: casbin_rule; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS  indoc_vre.casbin_rule (\n    id integer NOT NULL,\n    ptype
    character varying(255),\n    v0 character varying(255),\n    v1 character varying(255),\n
    \   v2 character varying(255),\n    v3 character varying(255),\n    v4 character
    varying(255),\n    v5 character varying(255)\n);\n\n\nALTER TABLE indoc_vre.casbin_rule
    OWNER TO indoc_vre;\n\n--\n-- Name: casbin_rule_id_seq; Type: SEQUENCE; Schema:
    indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF NOT EXISTS  indoc_vre.casbin_rule_id_seq\n
    \   START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE
    1;\n\n\nALTER TABLE indoc_vre.casbin_rule_id_seq OWNER TO indoc_vre;\n\n--\n--
    Name: casbin_rule_id_seq; Type: SEQUENCE OWNED BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER
    SEQUENCE indoc_vre.casbin_rule_id_seq OWNED BY indoc_vre.casbin_rule.id;\n\n\n--\n--
    Name: data_attribute; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS  indoc_vre.data_attribute (\n    id integer NOT NULL,\n    manifest_id
    integer,\n    name character varying,\n    type indoc_vre.typeenum NOT NULL,\n
    \   value character varying,\n    project_code character varying,\n    optional
    boolean\n);\n\n\nALTER TABLE indoc_vre.data_attribute OWNER TO indoc_vre;\n\n--\n--
    Name: data_attribute_id_seq; Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    SEQUENCE IF NOT EXISTS indoc_vre.data_attribute_id_seq\n    START WITH 1\n    INCREMENT
    BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.data_attribute_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: data_attribute_id_seq; Type: SEQUENCE OWNED
    BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.data_attribute_id_seq
    OWNED BY indoc_vre.data_attribute.id;\n\n\n--\n-- Name: data_manifest; Type: TABLE;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.data_manifest
    (\n    id integer NOT NULL,\n    name character varying,\n    project_code character
    varying\n);\n\n\nALTER TABLE indoc_vre.data_manifest OWNER TO indoc_vre;\n\n--\n--
    Name: data_manifest_id_seq; Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    SEQUENCE IF NOT EXISTS  indoc_vre.data_manifest_id_seq\n    START WITH 1\n    INCREMENT
    BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.data_manifest_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: data_manifest_id_seq; Type: SEQUENCE OWNED
    BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.data_manifest_id_seq
    OWNED BY indoc_vre.data_manifest.id;\n\n\n--\n-- Name: dataset_schema; Type: TABLE;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.dataset_schema
    (\n    geid character varying NOT NULL,\n    name character varying,\n    dataset_geid
    character varying,\n    tpl_geid character varying,\n    standard character varying,\n
    \   system_defined boolean,\n    is_draft boolean,\n    content jsonb,\n    create_timestamp
    timestamp without time zone,\n    update_timestamp timestamp without time zone,\n
    \   creator character varying\n);\n\n\nALTER TABLE indoc_vre.dataset_schema OWNER
    TO indoc_vre;\n\n--\n-- Name: dataset_schema_template; Type: TABLE; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS  indoc_vre.dataset_schema_template
    (\n    geid character varying NOT NULL,\n    name character varying,\n    dataset_geid
    character varying,\n    standard character varying,\n    system_defined boolean,\n
    \   is_draft boolean,\n    content jsonb,\n    create_timestamp timestamp without
    time zone,\n    update_timestamp timestamp without time zone,\n    creator character
    varying\n);\n\n\nALTER TABLE indoc_vre.dataset_schema_template OWNER TO indoc_vre;\n\n--\n--
    Name: dataset_version; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS indoc_vre.dataset_version (\n    id integer NOT NULL,\n    dataset_code
    character varying,\n    dataset_geid character varying,\n    version character
    varying,\n    created_by character varying,\n    created_at timestamp without
    time zone,\n    location character varying,\n    notes character varying\n);\n\n\nALTER
    TABLE indoc_vre.dataset_version OWNER TO indoc_vre;\n\n--\n-- Name: dataset_version_id_seq;
    Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE  IF
    NOT EXISTS indoc_vre.dataset_version_id_seq\n    START WITH 1\n    INCREMENT BY
    1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.dataset_version_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: dataset_version_id_seq; Type: SEQUENCE OWNED
    BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.dataset_version_id_seq
    OWNED BY indoc_vre.dataset_version.id;\n\n\n--\n-- Name: resource_request; Type:
    TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.resource_request
    (\n    id integer NOT NULL,\n    user_geid character varying,\n    username character
    varying,\n    email character varying,\n    project_geid character varying,\n
    \   project_name character varying,\n    request_date timestamp without time zone,\n
    \   request_for character varying,\n    active boolean,\n    complete_date timestamp
    without time zone\n);\n\n\nALTER TABLE indoc_vre.resource_request OWNER TO indoc_vre;\n\n--\n--
    Name: resource_request_id_seq; Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    SEQUENCE IF NOT EXISTS indoc_vre.resource_request_id_seq\n    START WITH 1\n    INCREMENT
    BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.resource_request_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: resource_request_id_seq; Type: SEQUENCE OWNED
    BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.resource_request_id_seq
    OWNED BY indoc_vre.resource_request.id;\n\n\n--\n-- Name: system_metrics; Type:
    TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.system_metrics
    (\n    id integer NOT NULL,\n    active_user integer,\n    project integer,\n
    \   storage integer,\n    vm integer,\n    cores integer,\n    ram integer,\n
    \   date timestamp with time zone\n);\n\n\nALTER TABLE indoc_vre.system_metrics
    OWNER TO indoc_vre;\n\n--\n-- Name: system_metrics_id_seq; Type: SEQUENCE; Schema:
    indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF NOT EXISTS indoc_vre.system_metrics_id_seq\n
    \   START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE
    1;\n\n\nALTER TABLE indoc_vre.system_metrics_id_seq OWNER TO indoc_vre;\n\n--\n--
    Name: system_metrics_id_seq; Type: SEQUENCE OWNED BY; Schema: indoc_vre; Owner:
    indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.system_metrics_id_seq OWNED BY indoc_vre.system_metrics.id;\n\n\n--\n--
    Name: user_invitation; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS indoc_vre.user_invitation (\n    invitation_code text,\n    invitation_detail
    text,\n    expiry_timestamp timestamp without time zone NOT NULL,\n    create_timestamp
    timestamp without time zone NOT NULL,\n    invited_by text,\n    email text,\n
    \   role text,\n    project text,\n    id integer NOT NULL,\n    status text\n);\n\n\nALTER
    TABLE indoc_vre.user_invitation OWNER TO indoc_vre;\n\n--\n-- Name: user_invitation_id_seq;
    Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF
    NOT EXISTS indoc_vre.user_invitation_id_seq\n    START WITH 1\n    INCREMENT BY
    1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.user_invitation_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: user_invitation_id_seq; Type: SEQUENCE OWNED
    BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.user_invitation_id_seq
    OWNED BY indoc_vre.user_invitation.id;\n\n\n--\n-- Name: user_key; Type: TABLE;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.user_key
    (\n    id integer NOT NULL,\n    user_geid character varying,\n    public_key
    character varying,\n    key_name character varying,\n    is_sandboxed boolean,\n
    \   created_at timestamp without time zone\n);\n\n\nALTER TABLE indoc_vre.user_key
    OWNER TO indoc_vre;\n\n--\n-- Name: user_key_id_seq; Type: SEQUENCE; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nCREATE SEQUENCE IF NOT EXISTS indoc_vre.user_key_id_seq\n
    \   START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE
    1;\n\n\nALTER TABLE indoc_vre.user_key_id_seq OWNER TO indoc_vre;\n\n--\n-- Name:
    user_key_id_seq; Type: SEQUENCE OWNED BY; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER
    SEQUENCE indoc_vre.user_key_id_seq OWNED BY indoc_vre.user_key.id;\n\n\n--\n--
    Name: user_password_reset; Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    TABLE IF NOT EXISTS indoc_vre.user_password_reset (\n    reset_token text,\n    email
    text,\n    expiry_timestamp timestamp without time zone NOT NULL\n);\n\n\nALTER
    TABLE indoc_vre.user_password_reset OWNER TO indoc_vre;\n\n--\n-- Name: workbench_resource;
    Type: TABLE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS
    indoc_vre.workbench_resource (\n    id integer NOT NULL,\n    geid character varying,\n
    \   project_code character varying,\n    workbench_resource character varying,\n
    \   deployed boolean,\n    deployed_date timestamp without time zone,\n    deployed_by
    character varying\n);\n\n\nALTER TABLE indoc_vre.workbench_resource OWNER TO indoc_vre;\n\n--\n--
    Name: workbench_resource_id_seq; Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    SEQUENCE IF NOT EXISTS indoc_vre.workbench_resource_id_seq\n    START WITH 1\n
    \   INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER
    TABLE indoc_vre.workbench_resource_id_seq OWNER TO indoc_vre;\n\n--\n-- Name:
    workbench_resource_id_seq; Type: SEQUENCE OWNED BY; Schema: indoc_vre; Owner:
    indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.workbench_resource_id_seq OWNED BY indoc_vre.workbench_resource.id;\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.announcement ALTER COLUMN id SET DEFAULT nextval('indoc_vre.announcement_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.archive_preview ALTER COLUMN id SET DEFAULT nextval('indoc_vre.archive_preview_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.bids_results ALTER COLUMN id SET DEFAULT nextval('indoc_vre.bids_results_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.casbin_rule ALTER COLUMN id SET DEFAULT nextval('indoc_vre.casbin_rule_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.data_attribute ALTER COLUMN id SET DEFAULT nextval('indoc_vre.data_attribute_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.data_manifest ALTER COLUMN id SET DEFAULT nextval('indoc_vre.data_manifest_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.dataset_version ALTER COLUMN id SET DEFAULT nextval('indoc_vre.dataset_version_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.resource_request ALTER COLUMN id SET DEFAULT nextval('indoc_vre.resource_request_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.system_metrics ALTER COLUMN id SET DEFAULT nextval('indoc_vre.system_metrics_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.user_invitation ALTER COLUMN id SET DEFAULT nextval('indoc_vre.user_invitation_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.user_key ALTER COLUMN id SET DEFAULT nextval('indoc_vre.user_key_id_seq'::regclass);\n\n\n--\n--
    Name: id; Type: DEFAULT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE
    ONLY indoc_vre.workbench_resource ALTER COLUMN id SET DEFAULT nextval('indoc_vre.workbench_resource_id_seq'::regclass);\n\n\n--\n--
    Name: announcement_pkey; Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\n\n--
    information_schema.constraint_column_usage to check for the constraint doesn't
    work for foreign keys.\n\nCREATE OR REPLACE FUNCTION pg_temp.create_constraint_if_not_exists(\n
    \   t_name text, c_name text, constraint_sql text\n) \nRETURNS void AS\n$$\nBEGIN\n
    \   -- Look for our constraint\n    IF EXISTS (--SELECT constraint_name \n               --FROM
    information_schema.constraint_column_usage \n               --WHERE table_name
    = t_name  AND constraint_name = c_name\n               SELECT c.conname\n               FROM
    pg_constraint AS c\n               INNER JOIN pg_class AS t ON c.conrelid = t.\"oid\"\n
    \              WHERE t.relname = t_name AND c.conname = c_name\n               )
    THEN\n        RAISE NOTICE 'constraint already exists';\n        \n    ELSE \n
    \       EXECUTE constraint_sql;\n    END IF;\n    \nEND;\n$$ LANGUAGE 'plpgsql';\n\nSELECT
    pg_temp.create_constraint_if_not_exists(\n        'announcement',\n        'announcement_pkey',\n
    \       'ALTER TABLE ONLY indoc_vre.announcement ADD CONSTRAINT announcement_pkey
    PRIMARY KEY (id);'\n);\n\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'approval_entity',\n    'approval_entity_pkey',\n    'ALTER TABLE ONLY indoc_vre.approval_entity
    ADD CONSTRAINT approval_entity_pkey PRIMARY KEY (id);'\n);\n\n\n\n--ALTER TABLE
    ONLY indoc_vre.announcement\n --   ADD CONSTRAINT announcement_pkey PRIMARY KEY
    (id);\n\n\n--\n-- Name: approval_entity_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\n--ALTER TABLE ONLY indoc_vre.approval_entity\n--    ADD
    CONSTRAINT approval_entity_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: approval_request_pkey;
    Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'approval_request',\n    'approval_request_pkey',\n    'ALTER TABLE ONLY indoc_vre.approval_request\n
    \   ADD CONSTRAINT approval_request_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE
    ONLY indoc_vre.approval_request\n--    ADD CONSTRAINT approval_request_pkey PRIMARY
    KEY (id);\n\n\n--\n-- Name: archive_preview_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'archive_preview',\n
    \   'archive_preview_pkey',\n    'ALTER TABLE ONLY indoc_vre.archive_preview\n
    \   ADD CONSTRAINT archive_preview_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE
    ONLY indoc_vre.archive_preview\n--   ADD CONSTRAINT archive_preview_pkey PRIMARY
    KEY (id);\n\n\n--\n-- Name: bids_results_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'bids_results',\n
    \   'bids_results_pkey',\n    'ALTER TABLE ONLY indoc_vre.bids_results\n    ADD
    CONSTRAINT bids_results_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.bids_results\n--
    \   ADD CONSTRAINT bids_results_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: casbin_rule_pkey;
    Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'casbin_rule',\n    'casbin_rule_pkey',\n    'ALTER TABLE ONLY indoc_vre.casbin_rule\n
    \   ADD CONSTRAINT casbin_rule_pkey PRIMARY KEY (id);'\n);\n\n\n--ALTER TABLE
    ONLY indoc_vre.casbin_rule\n --   ADD CONSTRAINT casbin_rule_pkey PRIMARY KEY
    (id);\n\n\n--\n-- Name: data_attribute_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'data_attribute',\n
    \   'data_attribute_pkey',\n    'ALTER TABLE ONLY indoc_vre.data_attribute\n    ADD
    CONSTRAINT data_attribute_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.data_attribute\n--
    \   ADD CONSTRAINT data_attribute_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: data_manifest_pkey;
    Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'data_manifest',\n    'data_manifest_pkey',\n    'ALTER TABLE ONLY indoc_vre.data_manifest\n
    \   ADD CONSTRAINT data_manifest_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE
    ONLY indoc_vre.data_manifest\n--    ADD CONSTRAINT data_manifest_pkey PRIMARY
    KEY (id);\n\n\n--\n-- Name: dataset_schema_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'dataset_schema',\n
    \   'dataset_schema_pkey',\n    'ALTER TABLE ONLY indoc_vre.dataset_schema\n    ADD
    CONSTRAINT dataset_schema_pkey PRIMARY KEY (geid);'\n);\n\n--ALTER TABLE ONLY
    indoc_vre.dataset_schema\n--    ADD CONSTRAINT dataset_schema_pkey PRIMARY KEY
    (geid);\n\n\n--\n-- Name: dataset_schema_template_pkey; Type: CONSTRAINT; Schema:
    indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'dataset_schema_template',\n    'dataset_schema_template_pkey',\n    'ALTER
    TABLE ONLY indoc_vre.dataset_schema_template\n    ADD CONSTRAINT dataset_schema_template_pkey
    PRIMARY KEY (geid);'\n);\n\n--ALTER TABLE ONLY indoc_vre.dataset_schema_template\n--
    \  ADD CONSTRAINT dataset_schema_template_pkey PRIMARY KEY (geid);\n\n\n--\n--
    Name: dataset_version_pkey; Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT
    pg_temp.create_constraint_if_not_exists(\n    'dataset_version',\n    'dataset_version_pkey',\n
    \   'ALTER TABLE ONLY indoc_vre.dataset_version\n    ADD CONSTRAINT dataset_version_pkey
    PRIMARY KEY (id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.dataset_version\n--   ADD
    CONSTRAINT dataset_version_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: project_code_version;
    Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'announcement',\n    'project_code_version',\n    'ALTER TABLE ONLY indoc_vre.announcement\n
    \   ADD CONSTRAINT project_code_version UNIQUE (project_code, version);'\n);\n\n--ALTER
    TABLE ONLY indoc_vre.announcement\n--   ADD CONSTRAINT project_code_version UNIQUE
    (project_code, version);\n\n\n--\n-- Name: resource_request_pkey; Type: CONSTRAINT;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'resource_request',\n    'resource_request_pkey',\n    'ALTER TABLE ONLY indoc_vre.resource_request\n
    \   ADD CONSTRAINT resource_request_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE
    ONLY indoc_vre.resource_request\n--    ADD CONSTRAINT resource_request_pkey PRIMARY
    KEY (id);\n\n\n--\n-- Name: system_metrics_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'system_metrics',\n
    \   'system_metrics_pkey',\n    'ALTER TABLE ONLY indoc_vre.system_metrics\n    ADD
    CONSTRAINT system_metrics_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.system_metrics\n--
    \   ADD CONSTRAINT system_metrics_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: unique_key;
    Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'user_key',\n    'unique_key',\n    'ALTER TABLE ONLY indoc_vre.user_key\n
    \   ADD CONSTRAINT unique_key UNIQUE (key_name, user_geid, is_sandboxed);'\n);\n\n--ALTER
    TABLE ONLY indoc_vre.user_key\n--    ADD CONSTRAINT unique_key UNIQUE (key_name,
    user_geid, is_sandboxed);\n\n\n--\n-- Name: user_invitation_pkey; Type: CONSTRAINT;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'user_invitation',\n    'user_invitation_pkey',\n    'ALTER TABLE ONLY indoc_vre.user_invitation\n
    \   ADD CONSTRAINT user_invitation_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE
    ONLY indoc_vre.user_invitation\n--    ADD CONSTRAINT user_invitation_pkey PRIMARY
    KEY (id);\n\n\n--\n-- Name: user_key_pkey; Type: CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'user_key',\n
    \   'user_key_pkey',\n    'ALTER TABLE ONLY indoc_vre.user_key\n    ADD CONSTRAINT
    user_key_pkey PRIMARY KEY (id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.user_key\n--
    \   ADD CONSTRAINT user_key_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: workbench_resource_pkey;
    Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'workbench_resource',\n    'workbench_resource_pkey',\n    'ALTER TABLE ONLY
    indoc_vre.workbench_resource\n    ADD CONSTRAINT workbench_resource_pkey PRIMARY
    KEY (id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.workbench_resource\n--    ADD CONSTRAINT
    workbench_resource_pkey PRIMARY KEY (id);\n\n\n--\n-- Name: approval_entity_request_id_fkey;
    Type: FK CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'approval_entity',\n    'approval_entity_request_id_fkey',\n    'ALTER TABLE
    ONLY indoc_vre.approval_entity\n    ADD CONSTRAINT approval_entity_request_id_fkey
    FOREIGN KEY (request_id) REFERENCES indoc_vre.approval_request(id);'\n);\n\n--ALTER
    TABLE ONLY indoc_vre.approval_entity\n--    ADD CONSTRAINT approval_entity_request_id_fkey
    FOREIGN KEY (request_id) REFERENCES indoc_vre.approval_request(id);\n\n\n--\n--
    Name: data_attribute_manifest_id_fkey; Type: FK CONSTRAINT; Schema: indoc_vre;
    Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n    'data_attribute',\n
    \   'data_attribute_manifest_id_fkey',\n    'ALTER TABLE ONLY indoc_vre.data_attribute\n
    \   ADD CONSTRAINT data_attribute_manifest_id_fkey FOREIGN KEY (manifest_id) REFERENCES
    indoc_vre.data_manifest(id);'\n);\n\n--ALTER TABLE ONLY indoc_vre.data_attribute\n--
    \   ADD CONSTRAINT data_attribute_manifest_id_fkey FOREIGN KEY (manifest_id) REFERENCES
    indoc_vre.data_manifest(id);\n\n\n--\n-- Name: dataset_schema_tpl_geid_fkey; Type:
    FK CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT pg_temp.create_constraint_if_not_exists(\n
    \   'dataset_schema',\n    'dataset_schema_tpl_geid_fkey',\n    'ALTER TABLE ONLY
    indoc_vre.dataset_schema\n    ADD CONSTRAINT dataset_schema_tpl_geid_fkey FOREIGN
    KEY (tpl_geid) REFERENCES indoc_vre.dataset_schema_template(geid);'\n);\n\n--ALTER
    TABLE ONLY indoc_vre.dataset_schema\n--    ADD CONSTRAINT dataset_schema_tpl_geid_fkey
    FOREIGN KEY (tpl_geid) REFERENCES indoc_vre.dataset_schema_template(geid);\n\n\n--\n--
    Name: SCHEMA public; Type: ACL; Schema: -; Owner: indoc_vre\n--\n\nREVOKE ALL
    ON SCHEMA public FROM PUBLIC;\nREVOKE ALL ON SCHEMA public FROM indoc_vre;\nGRANT
    ALL ON SCHEMA public TO indoc_vre;\nGRANT ALL ON SCHEMA public TO PUBLIC;\n\n\n--\n--
    PostgreSQL database dump complete\n--\n\n\n--\n-- PostgreSQL database dump\n--\n\n--
    Dumped from database version 9.5.23\n-- Dumped by pg_dump version 9.5.23\n\nSET
    statement_timeout = 0;\nSET lock_timeout = 0;\nSET client_encoding = 'UTF8';\nSET
    standard_conforming_strings = on;\nSELECT pg_catalog.set_config('search_path',
    '', false);\nSET check_function_bodies = false;\nSET xmloption = content;\nSET
    client_min_messages = warning;\nSET row_security = off;\n\nSET default_tablespace
    = '';\n\nSET default_with_oids = false;\n\n--\n-- Name: casbin_rule; Type: TABLE;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE TABLE IF NOT EXISTS indoc_vre.casbin_rule
    (\n    id integer NOT NULL,\n    ptype character varying(255),\n    v0 character
    varying(255),\n    v1 character varying(255),\n    v2 character varying(255),\n
    \   v3 character varying(255),\n    v4 character varying(255),\n    v5 character
    varying(255)\n);\n\n\nALTER TABLE indoc_vre.casbin_rule OWNER TO indoc_vre;\n\n--\n--
    Name: casbin_rule_id_seq; Type: SEQUENCE; Schema: indoc_vre; Owner: indoc_vre\n--\n\nCREATE
    SEQUENCE IF NOT EXISTS indoc_vre.casbin_rule_id_seq\n    START WITH 1\n    INCREMENT
    BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE indoc_vre.casbin_rule_id_seq
    OWNER TO indoc_vre;\n\n--\n-- Name: casbin_rule_id_seq; Type: SEQUENCE OWNED BY;
    Schema: indoc_vre; Owner: indoc_vre\n--\n\nALTER SEQUENCE indoc_vre.casbin_rule_id_seq
    OWNED BY indoc_vre.casbin_rule.id;\n\n\n--\n-- Name: id; Type: DEFAULT; Schema:
    indoc_vre; Owner: indoc_vre\n--\n\nALTER TABLE ONLY indoc_vre.casbin_rule ALTER
    COLUMN id SET DEFAULT nextval('indoc_vre.casbin_rule_id_seq'::regclass);\n\n\n--\n--
    Data for Name: casbin_rule; Type: TABLE DATA; Schema: indoc_vre; Owner: indoc_vre\n--\n\nINSERT
    INTO indoc_vre.casbin_rule (id, ptype, v0, v1, v2, v3, v4, v5)\nSELECT * FROM
    (\n  VALUES\n    (1, 'p', 'admin', '*', 'file', 'view', NULL, NULL),\n    (2,
    'p', 'admin', '*', 'file', 'delete', NULL, NULL),\n    (3, 'p', 'admin', '*',
    'file', 'upload', NULL, NULL),\n    (4, 'p', 'admin', '*', 'file', 'download',
    NULL, NULL),\n    (5, 'p', 'admin', '*', 'file', 'copy', NULL, NULL),\n    (6,
    'p', 'collaborator', '*', 'file', 'view', NULL, NULL),\n    (7, 'p', 'collaborator',
    '*', 'file', 'delete', NULL, NULL),\n    (8, 'p', 'collaborator', '*', 'file',
    'upload', NULL, NULL),\n    (9, 'p', 'collaborator', '*', 'file', 'download',
    NULL, NULL),\n    (10, 'p', 'contributor', 'greenroom', 'file', 'view', NULL,
    NULL),\n    (11, 'p', 'contributor', 'greenroom', 'file', 'delete', NULL, NULL),\n
    \   (12, 'p', 'contributor', 'greenroom', 'file', 'upload', NULL, NULL),\n    (13,
    'p', 'contributor', 'greenroom', 'file', 'download', NULL, NULL),\n    (14, 'p',
    'admin', '*', 'announcement', 'view', NULL, NULL),\n    (15, 'p', 'admin', '*',
    'announcement', 'create', NULL, NULL),\n    (16, 'p', 'contributor', '*', 'announcement',
    'view', NULL, NULL),\n    (17, 'p', 'collaborator', '*', 'announcement', 'view',
    NULL, NULL),\n    (18, 'p', 'admin', '*', 'file_attribute_template', 'view', NULL,
    NULL),\n    (19, 'p', 'admin', '*', 'file_attribute_template', 'create', NULL,
    NULL),\n    (20, 'p', 'admin', '*', 'file_attribute_template', 'update', NULL,
    NULL),\n    (21, 'p', 'admin', '*', 'file_attribute_template', 'delete', NULL,
    NULL),\n    (22, 'p', 'admin', '*', 'file_attribute_template', 'import', NULL,
    NULL),\n    (23, 'p', 'admin', '*', 'file_attribute_template', 'export', NULL,
    NULL),\n    (24, 'p', 'admin', '*', 'file_attribute_template', 'attach', NULL,
    NULL),\n    (25, 'p', 'contributor', '*', 'file_attribute_template', 'view', NULL,
    NULL),\n    (26, 'p', 'collaborator', '*', 'file_attribute_template', 'create',
    NULL, NULL),\n    (27, 'p', 'collaborator', '*', 'file_attribute_template', 'update',
    NULL, NULL),\n    (28, 'p', 'collaborator', '*', 'file_attribute_template', 'delete',
    NULL, NULL),\n    (29, 'p', 'collaborator', '*', 'file_attribute_template', 'attach',
    NULL, NULL),\n    (30, 'p', 'admin', '*', 'file_attribute', 'view', NULL, NULL),\n
    \   (31, 'p', 'admin', '*', 'file_attribute', 'create', NULL, NULL),\n    (32,
    'p', 'admin', '*', 'file_attribute', 'update', NULL, NULL),\n    (33, 'p', 'admin',
    '*', 'file_attribute', 'delete', NULL, NULL),\n    (34, 'p', 'collaborator', '*',
    'file_attribute', 'view', NULL, NULL),\n    (35, 'p', 'collaborator', '*', 'file_attribute',
    'update', NULL, NULL),\n    (36, 'p', 'collaborator', '*', 'file_attribute', 'delete',
    NULL, NULL),\n    (37, 'p', 'admin', '*', 'tags', 'view', NULL, NULL),\n    (38,
    'p', 'admin', '*', 'tags', 'create', NULL, NULL),\n    (39, 'p', 'admin', '*',
    'tags', 'update', NULL, NULL),\n    (40, 'p', 'admin', '*', 'tags', 'delete',
    NULL, NULL),\n    (41, 'p', 'contributor', 'greenroom', 'tags', 'view', NULL,
    NULL),\n    (42, 'p', 'contributor', 'greenroom', 'tags', 'create', NULL, NULL),\n
    \   (43, 'p', 'contributor', 'greenroom', 'tags', 'update', NULL, NULL),\n    (44,
    'p', 'contributor', 'greenroom', 'tags', 'delete', NULL, NULL),\n    (45, 'p',
    'collaborator', '*', 'tags', 'view', NULL, NULL),\n    (46, 'p', 'collaborator',
    '*', 'tags', 'create', NULL, NULL),\n    (47, 'p', 'collaborator', '*', 'tags',
    'update', NULL, NULL),\n    (48, 'p', 'collaborator', '*', 'tags', 'delete', NULL,
    NULL),\n    (49, 'p', 'admin', '*', 'resource_request', 'create', NULL, NULL),\n
    \   (50, 'p', 'collaborator', '*', 'resource_request', 'create', NULL, NULL),\n
    \   (51, 'p', 'platform_admin', '*', 'resource_request', 'view', NULL, NULL),\n
    \   (52, 'p', 'platform_admin', '*', 'resource_request', 'update', NULL, NULL),\n
    \   (53, 'p', 'platform_admin', '*', 'resource_request', 'delete', NULL, NULL),\n
    \   (54, 'p', 'admin', '*', 'workbench', 'view', NULL, NULL),\n    (55, 'p', 'contributor',
    '*', 'workbench', 'view', NULL, NULL),\n    (56, 'p', 'collaborator', '*', 'workbench',
    'view', NULL, NULL),\n    (57, 'p', 'platform_admin', '*', 'workbench', 'create',
    NULL, NULL),\n    (58, 'p', 'admin', '*', 'file_stats', 'view', NULL, NULL),\n
    \   (59, 'p', 'contributor', '*', 'file_stats', 'view', NULL, NULL),\n    (60,
    'p', 'collaborator', '*', 'file_stats', 'view', NULL, NULL),\n    (61, 'p', 'admin',
    '*', 'audit_logs', 'view', NULL, NULL),\n    (62, 'p', 'contributor', '*', 'audit_logs',
    'view', NULL, NULL),\n    (63, 'p', 'collaborator', '*', 'audit_logs', 'view',
    NULL, NULL),\n    (64, 'p', 'admin', '*', 'lineage', 'view', NULL, NULL),\n    (65,
    'p', 'contributor', 'greenroom', 'lineage', 'view', NULL, NULL),\n    (66, 'p',
    'admin', '*', 'invite', 'view', NULL, NULL),\n    (67, 'p', 'admin', '*', 'invite',
    'create', NULL, NULL),\n    (68, 'p', 'admin', '*', 'project', 'view', NULL, NULL),\n
    \   (69, 'p', 'admin', '*', 'project', 'update', NULL, NULL),\n    (70, 'p', 'contributor',
    '*', 'project', 'view', NULL, NULL),\n    (71, 'p', 'collaborator', '*', 'project',
    'view', NULL, NULL),\n    (72, 'p', 'platform_admin', '*', 'project', 'create',
    NULL, NULL),\n    (73, 'p', 'admin', '*', 'tasks', 'view', NULL, NULL),\n    (74,
    'p', 'admin', '*', 'tasks', 'delete', NULL, NULL),\n    (75, 'p', 'contributor',
    '*', 'tasks', 'view', NULL, NULL),\n    (76, 'p', 'contributor', '*', 'tasks',
    'delete', NULL, NULL),\n    (77, 'p', 'collaborator', '*', 'tasks', 'view', NULL,
    NULL),\n    (78, 'p', 'collaborator', '*', 'tasks', 'delete', NULL, NULL),\n    (79,
    'p', 'admin', '*', 'users', 'view', NULL, NULL),\n    (80, 'p', 'platform_admin',
    '*', 'notification', 'create', NULL, NULL),\n    (81, 'p', 'admin', 'core', 'collections',
    'view', NULL, NULL),\n    (82, 'p', 'admin', 'core', 'collections', 'create',
    NULL, NULL),\n    (83, 'p', 'admin', 'core', 'collections', 'update', NULL, NULL),\n
    \   (84, 'p', 'admin', 'core', 'collections', 'delete', NULL, NULL),\n    (85,
    'p', 'collaborator', '*', 'lineage', 'view', NULL, NULL),\n    (86, 'p', 'contributor',
    'greenroom', 'file_attribute', 'view', NULL, NULL),\n    (87, 'p', 'contributor',
    'greenroom', 'file_attribute_template', 'attach', NULL, NULL),\n    (88, 'p',
    'collaborator', 'core', 'collections', 'view', NULL, NULL),\n    (89, 'p', 'collaborator',
    'core', 'collections', 'create', NULL, NULL),\n    (90, 'p', 'collaborator', 'core',
    'collections', 'update', NULL, NULL),\n    (91, 'p', 'collaborator', 'core', 'collections',
    'delete', NULL, NULL),\n    (92, 'p', 'contributor', 'greenroom', 'file_attribute',
    'update', NULL, NULL),\n    (93, 'p', 'contributor', 'core', 'collections', 'view',
    NULL, NULL),\n    (94, 'p', 'collaborator', '*', 'file_attribute_template', 'view',
    NULL, NULL),\n    (95, 'p', 'admin', '*', 'copyrequest', 'view', NULL, NULL),\n
    \   (96, 'p', 'admin', '*', 'copyrequest', 'update', NULL, NULL),\n    (97, 'p',
    'collaborator', '*', 'copyrequest', 'create', NULL, NULL),\n    (98, 'p', 'collaborator',
    '*', 'copyrequest', 'view', NULL, NULL)\n) AS t(id, ptype, v0, v1, v2, v3, v4,
    v5)\nWHERE NOT EXISTS (\n  SELECT 1 FROM indoc_vre.casbin_rule WHERE id = t.id\n);\n\n\n\n--
    Name: casbin_rule_id_seq; Type: SEQUENCE SET; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT
    pg_catalog.setval('indoc_vre.casbin_rule_id_seq', 98, true);\n\n\n--\n-- Name:
    casbin_rule_pkey; Type: CONSTRAINT; Schema: indoc_vre; Owner: indoc_vre\n--\n\nSELECT
    pg_temp.create_constraint_if_not_exists(\n    'casbin_rule',\n    'casbin_rule_pkey',\n
    \   'ALTER TABLE ONLY indoc_vre.casbin_rule\n    ADD CONSTRAINT casbin_rule_pkey
    PRIMARY KEY (id);'\n);\n--ALTER TABLE ONLY indoc_vre.casbin_rule\n--    ADD CONSTRAINT
    casbin_rule_pkey PRIMARY KEY (id);\n\n\n--\n-- PostgreSQL database dump complete\n--"
kind: ConfigMap
metadata:
  creationTimestamp: "2024-12-09T16:03:29Z"
  name: init-opsdb-configmap
  namespace: utility
  resourceVersion: "125677"
  uid: 490c8d9d-3530-4f7b-b691-4675909d1b2d
